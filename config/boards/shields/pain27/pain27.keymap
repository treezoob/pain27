#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/*
&spi1 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	mosi-pin = <10>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <15>;
	miso-pin = <14>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <9>; /* arbitrary; change at will */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
	};
};
*/

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

/ {
    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping_term_ms = <300>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
        combos {
        compatible = "zmk,combos";
        combo_del {
          timeout-ms = <30>;
          key-positions = <7 8>;
          bindings = <&kp DEL>;
          layers = <0 1 2>;
         };
        combo_bspc {
            timeout-ms = <30>;
            key-positions = <8 9>;
            bindings = <&kp BKSP>;
            layers = <0 1 2>;
        };
        combo_tab {
            timeout-ms = <30>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
            layers = <0 1 2>;
        };
        combo_esc {
            timeout-ms = <30>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
            layers = <0 1 2>;
        };
        combo_apos {
            timeout-ms = <30>;
            key-positions = <25 18>;
            bindings = <&kp APOS>;
            layers = <0>;
        };
        combo_left {
            timeout-ms = <30>;
            key-positions = <14 15>;
            bindings = <&kp LEFT>;
            layers = <0>;
        };        
        combo_down {
            timeout-ms = <30>;
            key-positions = <15 16>;
            bindings = <&kp DOWN>;
            layers = <0>;
        };
        combo_up {
            timeout-ms = <30>;
            key-positions = <16 17>;
            bindings = <&kp UP>;
            layers = <0>;
        };
        combo_right {
            timeout-ms = <30>;
            key-positions = <17 18>;
            bindings = <&kp RIGHT>;
            layers = <0>;
        };
        combo_lgui {
            timeout-ms = <30>;
            key-positions = <19 20>;
            bindings = <&kp LGUI>;
            layers = <0>;
        };
        combo_return {
            timeout-ms = <30>;
            key-positions = <24 25>;
            bindings = <&kp RET>;
            layers = <0 1 2>;
        };
        combo_two_a {
            timeout-ms = <30>;
            key-positions = <0 9>;
            bindings = <&mo 2>;
            layers = <0>;
        };
        combo_two_b {
            timeout-ms = <30>;
            key-positions = <10 18>;
            bindings = <&mo 2>;
            layers = <0>;
        };
    };


    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P
                &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L
                &hm LCTRL Z  &hm LALT X &lt 1 C &lt 2 V &hm RGUI B &hm RALT N &hm RCTRL M &hm LSHFT SPACE
            >;
        };
        n_layer {
            bindings = <
                &kp ESC  &kp K_MUTE  &kp K_VOL_DOWN &kp K_VOL_UP  &kp K_PLAY_PAUSE  &kp HOME  &kp PAGE_DOWN &kp PAGE_UP &kp END &kp BACKSPACE
                &kp TAB  &rgb_ug RGB_TOG  &rgb_ug RGB_BRD &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW 
		&kp LCTRL &kp LALT &trans &mo 3 &kp RGUI &kp RALT &kp RCTRL &none
            >;
        };
        s_layer {
            bindings = <
                &kp N1   &kp N2  &kp N3 &kp N4  &kp N5 &kp N6  &kp N7   &kp N8   &kp N9 &kp N0
                &kp GRAVE &kp BACKSLASH   &kp MINUS &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON &kp SINGLE_QUOTE &kp ENTER
                &kp LCTRL  &kp LALT &mo 3 &trans &kp COMMA  &kp PERIOD &kp SLASH &none
            >;
        };
        x_layer {
            bindings = <
                &kp F1   &kp F2  &kp F3 &kp F4  &kp F5 &kp F6  &kp F7   &kp F8   &kp F9 &kp F10
                &kp F11 &kp F12   &rgb_ug RGB_SPD &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI &rgb_ug RGB_SAD &kp DELETE
                &kp LCTRL  &kp LALT &trans &trans &kp RGUI  &kp RALT &kp RCTRL &none
            >;
        };

    };
};
